spring:
  profiles:
    active: default
  application:
    name: 'datn-be'
  # AI MODULE CONFIGURATION
  ai:
    model:
      chat: none
    chat:
      client:
        enabled: false
    openai:
      api-key: ${OPENAI_KEY}
    vertex:
      ai:
        gemini:
          project-id: ${VERTEX_PROJECT_ID}
          location: ${VERTEX_LOCATION}
  # HTTP CLIENT CONFIGURATION - Disable auto-configuration
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration
      - org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration
      - org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration
  datasource:
    url: ${POSTGRES_DB_URL:jdbc:postgresql://localhost:5432/datn_monolith_db}
    username: ${POSTGRES_DB_USERNAME:postgres}
    password: ${POSTGRES_DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  # DOCUMENTS MODULE CONFIGURATION
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/${MONGODB_DATABASE}?authSource=${MONGODB_AUTH_DATABASE}}
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:ai-primary}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:change-me}
            authorization-grant-type: authorization_code
            redirect-uri: ${KEYCLOAK_REDIRECT_URI:http://localhost:3000/login/oauth2/code/keycloak}
            scope: openid, profile, email
        provider:
            keycloak:
                issuer-uri: http://localhost:8082/realms/ai-primary-dev
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8082/realms/ai-primary-dev
server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
app:
  models:
    configurations:
      openai:
        - model-name: "gpt-4o-mini-2024-07-18"
          display-name: "GPT-4 Optimized"
          provider: "OpenAI"
          default-model: false
          model-type: text
        - model-name: "gpt-4.1-nano-2025-04-14"
          display-name: "GPT-4.1 Nano"
          provider: "OpenAI"
          default-model: false
          model-type: text
      gemini:
        - model-name: "gemini-2.5-flash"
          display-name: "Gemini 2.5 Flash"
          provider: "Google"
          default-model: true
          model-type: text
        - model-name: "gemini-2.5-flash-lite"
          display-name: "Gemini 2.5 Flash Lite"
          provider: "Google"
          default-model: false
          model-type: text
      openRouter:
        - model-name: "google/gemini-2.5-flash-image-preview"
          display-name: "Nano Banana"
          provider: "openRouter"
          default-model: true
          model-type: image
  cors:
    allowed-origins: "*"
    allowed-origin-patterns: ${ALLOWED_ORIGINS}
    allowed-methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
    allow-credentials: false
    max-age: 3600
    exposed-headers: X-Presentation
  media:
    file-size-limit: 10485760 # 10MB
  api-client:
    timeout: 30000 # 30 seconds
    max-in-memory-size: 10485760 # 10MB
  auth:
    properties:
      realm: ${KEYCLOAK_REALM:ai-primary-dev}
      issuer: ${KEYCLOAK_ISSUER_URI:http://localhost:8082/realms/ai-primary-dev}
      client-id: ${KEYCLOAK_CLIENT_ID:ai-primary}
      client-secret: ${KEYCLOAK_CLIENT_SECRET:change-me}
      redirect-uri: http://localhost:8080/login/oauth2/code/keycloak
      signIn-uri: /oauth2/authorization/keycloak
      signup-uri: ${KEYCLOAK_ISSUER_URI}/login-actions/registration
      logout-uri: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/logout
      token-uri: ${KEYCLOAK_ISSUER_URI}/protocol/openid-connect/token
      server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8082}
    authorization:
      server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8082}
      realm: ${KEYCLOAK_REALM:ai-primary-dev}
      client-id: ${KEYCLOAK_CLIENT_ID:ai-primary}
      client-secret: ${KEYCLOAK_CLIENT_SECRET:change-me}
      client-uuid: ${KEYCLOAK_CLIENT_UUID:}
      connection-timeout: 5000
      read-timeout: 30000

ai:
  api:
    base-url: ${AI_API_BASE_URL:http://ai-worker:8081}
    timeout: ${AI_API_TIMEOUT:30000}
    outline-endpoint: ${AI_API_OUTLINE_ENDPOINT:/api/outline/generate/stream/mock}
    presentation-endpoint: ${AI_API_PRESENTATION_ENDPOINT:/api/presentations/generate/stream/mock}
    image-endpoint: ${AI_API_IMAGE_ENDPOINT:/api/image/generate/mock}

cloudflare:
  r2:
    endpoint:  https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com
    accessKey: ${S3_ACCESS_KEY_ID}
    secretKey: ${S3_SECRET_ACCESS_KEY}
    bucket:    ${R2_BUCKET_NAME}
    public-url: ${R2_PUBLIC_URL_DEV}

logging:
  level:
    "org.springframework.data.mongodb.core.MongoTemplate": DEBUG
