services:
  datn-be:
    build: .
    image: datn-be:latest
    container_name: datn-be
    depends_on:
      keycloak:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1024M
    environment:
      # Single PostgreSQL database connection
      - POSTGRES_DB_URL=jdbc:postgresql://postgres:5432/datn_monolith_db
      - POSTGRES_DB_USERNAME=postgres
      - POSTGRES_DB_PASSWORD=postgres

      # MongoDB connection for document persistence
      - MONGODB_URI=mongodb://mongouser:mongopassword@mongo:27017/presentation_db?authSource=admin

      # Keycloak configuration
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - KEYCLOAK_REDIRECT_URI=${KEYCLOAK_REDIRECT_URI}
      - KEYCLOAK_ISSUER_URI=${KEYCLOAK_ISSUER_URI}
      - KEYCLOAK_REALM_NAME=${KEYCLOAK_REALM_NAME}
      - KEYCLOAK_SERVER_URL=${KEYCLOAK_SERVER_URL}

      # CORS configuration
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}

      # RabbitMQ configuration (if needed)
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - RABBITMQ_PORT=${RABBITMQ_PORT:-5672}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME:-guest}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-guest}

      # Cloudflare R2
      - R2_ACCOUNT_ID=${R2_ACCOUNT_ID}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - R2_PUBLIC_URL_DEV=${R2_PUBLIC_URL_DEV}
      - CLOUD_FLARE_API_TOKEN=${CLOUD_FLARE_API_TOKEN}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}

      # AI Settings
      - AI_API_BASE_URL
      - AI_API_PRESENTATION_ENDPOINT
      - AI_API_OUTLINE_ENDPOINT

      # Spring profile
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /actuator/health HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"]
      interval: 30s
      timeout: 10s
      start_period: 90s
      retries: 5
    restart: unless-stopped
    ports:
      - "8080:8080"

# TODO: When deploying to production, consider using a managed Keycloak service or set up Keycloak in a separate, secure environment.
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    container_name: keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HEALTH_ENABLED=true
    ports:
      - "8082:8080"
      - "8443:8443"
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    volumes:
      - ./keycloak-data:/opt/keycloak/data